/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/todo.js":
/*!*********************!*\
  !*** ./src/todo.js ***!
  \*********************/
/***/ (() => {

eval("// Set up DatePicker\n$(\"#todoDate\").datetimepicker({\n  format: \"DD/MM/YYYY HH:mm:ss\"\n});\n$(\"#editTodoDate\").datetimepicker({\n  format: \"DD/MM/YYYY HH:mm:ss\"\n});\n\n// Front End Elements\nconst todoContainer = document.getElementById(\"thingsToDo\");\nconst doneContainer = document.getElementById(\"thingsDone\");\nconst missedContainer = document.getElementById(\"thingsMissed\");\nconst todoBox = document.getElementById(\"todoBox\");\nconst doneBox = document.getElementById(\"doneBox\");\nconst missedBox = document.getElementById(\"missedBox\");\nconst filter = document.getElementById(\"filter\");\nconst editId = document.getElementById(\"editTodoId\");\nconst editTitle = document.getElementById(\"editTodoTitle\");\nconst editDate = document.getElementById(\"editTodoDate\");\ncheckLocalItem();\nreminder();\n\n// Check Local Todos\nfunction checkLocalItem() {\n  let localTodos = JSON.parse(localStorage.getItem(\"todos\"));\n  if (localTodos != null && localTodos != undefined && localTodos.length > 0) {\n    // Set Todos to Backend\n    setTodos(localTodos);\n  }\n  getAllTodoList();\n}\n\n// Set todos from LocalStorage to Backend\nfunction setTodos(localTodo) {\n  fetch(`http://localhost:3001/api/set-todo`, {\n    method: \"POST\",\n    headers: {\n      accept: \"*/*\",\n      \"content-type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      localTodo: localTodo\n    })\n  });\n}\n\n// Check if Notification Permission is Granted if not Request Permission\nif (Notification.permission != \"denied\" && Notification.permission != \"granted\") {\n  Notification.requestPermission().then(permission => {});\n}\n\n// Function to Show Notification\nfunction showNotification(title, message) {\n  new Notification(title, {\n    body: message\n  });\n}\n\n// Function to Get All Todo List \nfunction getAllTodoList() {\n  fetch(`http://localhost:3001/api/list?filter=All`).then(response => response.json()).then(data => {\n    displayTaskProgression(data);\n    localStorage.setItem(\"todos\", JSON.stringify(data));\n  });\n}\n\n// Function to Display List of Todos in Frontend\nfunction displayTaskProgression(data) {\n  todoBox.innerHTML = \"\";\n  doneBox.innerHTML = \"\";\n  missedBox.innerHTML = \"\";\n  data.forEach(function (value, index) {\n    let items = ``;\n    items += `\n              <li class=\"list-group-item d-flex align-items-center ps-0 pe-3 py-1 rounded-0 border-0 bg-transparent\">\n                  <div class=\"form-check\">\n                      <input class=\"form-check-input me-0\" type=\"checkbox\" value=\"\" aria-label=\"...\" ${value.status == \"Complete\" ? \"checked\" : \"\"} disabled />\n                  </div>\n              </li>\n              <li\n                  class=\"list-group-item px-3 py-1 d-flex align-items-center flex-grow-1 border-0 bg-transparent mw-25\" style=\"word-break: break-word;\">\n                  <p class=\"lead fw-normal mb-0\"><b>${value.title}</b></p>\n              </li>`;\n    const dates = value.date.split(\" \");\n    const date = dates[0].split(\"/\");\n    const time = dates[1].split(\":\");\n\n    // Get Task's Date\n    const todoDate = new Date(date[2], date[1] - 1, date[0], time[0], time[1], time[2], 0);\n    if (value.status == \"Complete\") {\n      // Done Box\n      items += `\n               <li onClick=\"btnDeleteClick(${value.id})\" class=\"list-group-item p-0 d-flex align-items-center border-0 bg-transparent\">\n                   <div class=\"btn btn-danger rounded-3 d-flex align-items-center hidden-sm hidden-xs visible-md-block visible-lg-block\">\n                       <p class=\"small mb-0\">\n                           Delete\n                       </p>\n                   </div>\n                   <div class=\"hidden-md hidden-lg visible-sm-block visible-xs-block\">\n                       <i class=\"fa fa-solid fa-trash\"></i>\n                   </div>\n               </li>\n               `;\n      doneBox.innerHTML += `<ul class=\"list-group list-group-horizontal rounded-0 py-3\">${items}</ul>`;\n    } else if ((todoDate.getTime() - new Date().getTime()) / 1000 <= 0 && value.status != \"Complete\") {\n      // Missed Box\n      items += `\n                 <li class=\"list-group-item rounded-0 border-0 bg-transparent\">\n                     <div class=\"text-end text-muted\">\n                         <a href=\"#!\" class=\"text-muted\" data-mdb-toggle=\"tooltip m-auto\" title=\"Start Date\">\n                             <p class=\"small mb-0\"><i class=\"fas fa-info-circle me-2\"></i>${value.date}</p>\n                         </a>\n                     </div>\n                 </li>\n                 <li onClick=\"btnEditClick(${value.id})\" class=\"list-group-item p-0 d-flex align-items-center border-0 bg-transparent mx-3\">\n                      <div class=\"btn btn-warning rounded-3 d-flex align-items-center hidden-sm hidden-xs visible-md-block visible-lg-block\" data-bs-toggle=\"modal\" data-bs-target=\"#editModal\">\n                         <p class=\"small mb-0\">\n                             Edit\n                         </p>\n                      </div>\n                      <div class=\"hidden-md hidden-lg visible-sm-block visible-xs-block\" data-bs-toggle=\"modal\" data-bs-target=\"#editModal\">\n                        <i class=\"fa fa-solid fa-edit\"></i>\n                      </div>\n                 </li>\n                 <li onClick=\"btnCompleteClick(${value.id})\" class=\"list-group-item p-0 d-flex align-items-center border-0 bg-transparent\">\n                     <div class=\"btn btn-primary rounded-3 d-flex align-items-center hidden-sm hidden-xs visible-md-block visible-lg-block\">\n                         <p class=\"small mb-0\">\n                             Complete\n                         </p>\n                     </div>\n                     <div class=\"hidden-md hidden-lg visible-sm-block visible-xs-block\">\n                        <i class=\"fa fa-solid fa-check\"></i>\n                      </div>\n                 </li>`;\n      missedBox.innerHTML += `<ul class=\"list-group list-group-horizontal rounded-0 py-3\">${items}</ul>`;\n    } else {\n      // Todo Box\n      items += `\n               <li class=\"list-group-item rounded-0 border-0 bg-transparent\">\n                   <div class=\"text-end text-muted\">\n                       <a href=\"#!\" class=\"text-muted\" data-mdb-toggle=\"tooltip m-auto\" title=\"Start Date\">\n                           <p class=\"small mb-0\"><i class=\"fas fa-info-circle me-2\"></i>${value.date}</p>\n                       </a>\n                   </div>\n               </li>\n               <li onClick=\"btnEditClick(${value.id})\" class=\"list-group-item p-0 d-flex align-items-center border-0 bg-transparent mx-3\">\n                   <div class=\"btn btn-warning rounded-3 d-flex align-items-center hidden-sm hidden-xs visible-md-block visible-lg-block\" data-bs-toggle=\"modal\" data-bs-target=\"#editModal\">\n                       <p class=\"small mb-0\">\n                           Edit\n                       </p>\n                   </div>\n                   <div class=\"hidden-md hidden-lg visible-sm-block visible-xs-block\" data-bs-toggle=\"modal\" data-bs-target=\"#editModal\">\n                    <i class=\"fa fa-solid fa-edit\"></i>\n                  </div>\n               </li>\n               <li onClick=\"btnCompleteClick(${value.id})\" class=\"list-group-item p-0 d-flex align-items-center border-0 bg-transparent\">\n                   <div class=\"btn btn-primary rounded-3 d-flex align-items-center hidden-sm hidden-xs visible-md-block visible-lg-block\">\n                       <p class=\"small mb-0\">\n                           Complete\n                       </p>\n                   </div>\n                   <div class=\"hidden-md hidden-lg visible-sm-block visible-xs-block\">\n                      <i class=\"fa fa-solid fa-check\"></i>\n                    </div>\n               </li>`;\n      todoBox.innerHTML += `<ul class=\"list-group list-group-horizontal rounded-0 py-3\">${items}</ul>`;\n    }\n  });\n}\n\n// Function to Add Todo\nfunction btnAddClick() {\n  let todoTitle = document.getElementById(\"todoTitle\");\n  let todoDate = document.getElementById(\"todoDate\");\n  const dates = todoDate.value.split(\" \");\n  if (todoTitle.value == \"\") {\n    alert(\"Please Input Title!\");\n    return;\n  } else if (dates.length != 2 || dates[0].split(\"/\").length != 3 || dates[1].split(\":\").length != 3) {\n    alert(\"Please Follow the Date Format!\");\n    return;\n  }\n  fetch(\"http://localhost:3001/api/list\", {\n    method: \"POST\",\n    headers: {\n      accept: \"*/*\",\n      \"content-type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      title: todoTitle.value,\n      date: todoDate.value\n    })\n  });\n  todoTitle.value = \"\";\n  todoDate.value = \"\";\n  getAllTodoList();\n}\n\n// Function to Complete Todo\nfunction btnCompleteClick(id) {\n  fetch(`http://localhost:3001/api/list/${id}`, {\n    method: \"PUT\",\n    headers: {\n      accept: \"*/*\",\n      \"content-type\": \"application/json\"\n    }\n  });\n  getAllTodoList();\n}\n\n// Function to Delete Todo by ID\nfunction btnDeleteClick(id) {\n  fetch(`http://localhost:3001/api/list/${id}`, {\n    method: \"DELETE\",\n    headers: {\n      accept: \"*/*\",\n      \"content-type\": \"application/json\"\n    }\n  });\n  getAllTodoList();\n}\n\n// Function to Retrieve Todo Detail\nfunction btnEditClick(id) {\n  fetch(`http://localhost:3001/api/list/${id}`).then(response => response.json()).then(data => {\n    editId.value = data.id;\n    editTitle.value = data.title;\n    editDate.value = data.date;\n  });\n}\n\n// Function to Update Todo By ID\nfunction updateTodo() {\n  fetch(`http://localhost:3001/api/list/${editId.value}`, {\n    method: \"POST\",\n    headers: {\n      accept: \"*/*\",\n      \"content-type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      id: editId.value,\n      title: editTitle.value,\n      date: editDate.value\n    })\n  });\n  getAllTodoList();\n  document.getElementById(\"modalClose\").click();\n}\n\n// When User change The Filter \nfunction filterChange() {\n  const filterVal = filter.value;\n  if (filterVal == \"All\") {\n    todoContainer.style.display = \"block\";\n    doneContainer.style.display = \"block\";\n    missedContainer.style.display = \"block\";\n  } else if (filterVal == \"Pending\") {\n    todoContainer.style.display = \"block\";\n    doneContainer.style.display = \"none\";\n    missedContainer.style.display = \"block\";\n  } else if (filterVal == \"Complete\") {\n    todoContainer.style.display = \"none\";\n    doneContainer.style.display = \"block\";\n    missedContainer.style.display = \"none\";\n  }\n}\n\n// Function to Check if a Todo is Missed or Will Start Soon\nfunction reminder() {\n  fetch(`http://localhost:3001/api/list?filter=Pending`).then(response => response.json()).then(data => {\n    const today = new Date();\n    data.forEach(function (value, index) {\n      const dates = value.date.split(\" \");\n      if (dates.length > 1) {\n        const date = dates[0].split(\"/\");\n        const time = dates[1].split(\":\");\n        const todoDate = new Date(date[2], date[1] - 1, date[0], time[0], time[1], time[2], 0);\n        const dif = (todoDate.getTime() - today.getTime()) / 1000;\n        if (dif <= 300 && today < todoDate && value.status != \"Complete\") {\n          showNotification(\"Reminder\", `Task Due Date is In 5 Minutes or Less! Please Complete Task ${value.title}`);\n        } else if (dif <= 0 && value.status != \"Complete\") {\n          showNotification(\"Task Missed\", `You Missed Task ${value.title}`);\n        }\n      }\n    });\n  });\n  setInterval(function () {\n    fetch(`http://localhost:3001/api/list?filter=Pending`).then(response => response.json()).then(data => {\n      const today = new Date();\n      data.forEach(function (value, index) {\n        const dates = value.date.split(\" \");\n        if (dates.length > 1) {\n          const date = dates[0].split(\"/\");\n          const time = dates[1].split(\":\");\n          const todoDate = new Date(date[2], date[1] - 1, date[0], time[0], time[1], time[2], 0);\n          const dif = (todoDate.getTime() - today.getTime()) / 1000;\n          if (dif <= 300 && today < todoDate && value.status != \"Complete\") {\n            showNotification(\"Reminder\", `Task Due Date is In 5 Minutes or Less! Please Complete Task ${value.title}`);\n          } else if (dif <= 0 && value.status != \"Complete\") {\n            showNotification(\"Task Missed\", `You Missed Task ${value.title}`);\n          }\n        }\n      });\n    });\n  }, 300000);\n}\n\n// Export Functions \nwindow.btnAddClick = btnAddClick;\nwindow.btnCompleteClick = btnCompleteClick;\nwindow.btnDeleteClick = btnDeleteClick;\nwindow.btnEditClick = btnEditClick;\nwindow.filterChange = filterChange;\nwindow.updateTodo = updateTodo;\n\n//# sourceURL=webpack://backend/./src/todo.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/todo.js"]();
/******/ 	
/******/ })()
;